image: itisfoundation/gitlab-runner-docker:stable
variables:
  # docker in docker variant, see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # have some prefix so it may help for garbage collecting in the registry
  SC_CI_TEST_IMAGE_PREFIX: $SC_CI_TESTING_REGISTRY/ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
services:
   - docker:dind
before_script:
  - docker info
# --------------------------------------------------------------------------------------------
# ------- {{ cookiecutter.project_slug }}
# --------------------------------------------------------------------------------------------
{{ cookiecutter.project_slug }}-build:
  stage: build
  except:
    - production
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - cd services/{{ cookiecutter.project_slug }}
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make build
    - make push

{{ cookiecutter.project_slug }}-unit-test:
  stage: test
  except:
    - production
  script:
    - pip install -r services/{{ cookiecutter.project_slug }}/tests/requirements.txt
    - cd services/{{ cookiecutter.project_slug }}
    - make unit-test
  artifacts:
    reports:
      junit:
        - services/{{ cookiecutter.project_slug }}/pytest_unittest.xml
    paths:
      - services/{{ cookiecutter.project_slug }}/pytest_unittest.xml

{{ cookiecutter.project_slug }}-integration-test:
  stage: test
  except:
    - production
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - pip install -r services/{{ cookiecutter.project_slug }}/tests/requirements.txt
    - cd services/{{ cookiecutter.project_slug }}
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull
    - make integration-test
  artifacts:
    reports:
      junit:
        - services/{{ cookiecutter.project_slug }}/pytest_integrationtest.xml
    paths:
      - services/{{ cookiecutter.project_slug }}/pytest_integrationtest.xml

{{ cookiecutter.project_slug }}-master:
  stage: deploy
  only:
    - master
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd services/{{ cookiecutter.project_slug }}
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull
    - docker tag $SC_CI_TEST_IMAGE_PREFIX/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }} $SC_CI_MASTER_REGISTRY/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }}
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make push
  environment:
    name: master
    url: $SC_CI_MASTER_REGISTRY

{{ cookiecutter.project_slug }}-production:
  stage: deploy
  only:
    - production
  script:
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - echo "$SC_CI_PRODUCTION_REGISTRY_PASSWORD" | docker login -u "$SC_CI_PRODUCTION_REGISTRY_USER" --password-stdin $SC_CI_PRODUCTION_REGISTRY
    - cd services/{{ cookiecutter.project_slug }}
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull
    - docker tag $SC_CI_MASTER_REGISTRY/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }} $SC_CI_PRODUCTION_REGISTRY/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }}
    - export DOCKER_REGISTRY=$SC_CI_PRODUCTION_REGISTRY
    - make push-release
  environment:
    name: production
    url: $SC_CI_PRODUCTION_REGISTRY
